MLFeatureExtraction:
  features: [ log10_band_power_delta_eo, log10_band_power_theta_eo, log10_band_power_alpha_eo, log10_band_power_beta_eo,
              log10_band_power_gamma_eo ]
PredictionModelsHPO: { in_freq_band: all }
PretrainHPO:
  in_ocular_state: ec  # It is possible to make these HPs, but we would lose the connection to reactivity I think
  out_ocular_state: eo
  in_freq_band: all
  save_ssl_biomarkers: true
SimpleElecsslHPO:
  deviation_method: &deviation_method diff
  num_additional_trials: 5  # 750
  reuse_random_only: true  # To only re-use the Pretraining trials employing random sampling of HPCs or not
  in_ocular_state: ec
  out_ocular_state: eo
  include_pseudo_targets: true
MultivariableElecsslHPO:
  IOSpaces: # In ocular state, out ocular state, in frequency band, out frequency band
    - [ [ ec, eo ], [ all, delta ] ]
    - [ [ ec, eo ], [ all, theta ] ]
    - [ [ ec, eo ], [ all, alpha ] ]
    - [ [ ec, eo ], [ all, beta ] ]
    - [ [ ec, eo ], [ all, gamma ] ]
  deviation_method: *deviation_method
  num_random_reuse: 5  # 1000
  num_score_based_reuse: 8  # 1000
  random_and_reused_only: false
  num_additional_trials: 0
  score_based_kwargs:
    k_percent: 0.25
    target_mass: 0.75
    temp_bounds: [ 0.000001, 1000000 ]
    tol: 0.00001
  include_pseudo_targets: true
MultiTaskHPO:
  in_freq_band: all
  in_ocular_state: ec
  out_ocular_state: eo
  mtl_scores_aggregation_method: min  # How to aggregate the performance scores for the two tasks to provide a signal to
  # the HPO algorithm. Currently, we aim to maximise the minimum performance on the two tasks